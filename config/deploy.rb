# config valid only for current version of Capistrano
lock '3.3.5'

set :application, 'cebucondo'
set :deploy_user, 'cebucond'

# setup repo details
set :scm, :git
set :repo_url, 'git@github.com:leslietes/CCL.git'

# how many old releases do we want to keep
set :keep_releases, 5

# files we want symlinking to specific entries in shared.
set :linked_files, %w{config/database.yml}

# dirs we want symlinking to shared
set :linked_dirs, %w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system}

# which config files should be copied by deploy:setup_config
# see documentation in lib/capistrano/tasks/setup_config.cap
# for details of operations
set(:config_files, %w(
  database.example.yml
))

# which config files should be made executable after copying
# by deploy:setup_config. Example
#set(:executable_config_files, %w(
#  unicorn_init.sh
#))

# Note: This needs to be set even if you don't have any file.Without this
# variable in place capistrano/tasks/setup_config.cap breaks with error
# undefined method `each' for nil:NilClass @ line number 21
set(:executable_config_files, [])

# files which need to be symlinked to other parts of the
# filesystem. For example nginx virtualhosts, log rotation
# init scripts etc. Example
#set(:symlinks, [
#  {
#    source: "nginx.conf",
#    link: "/etc/nginx/sites-enabled/#{fetch(:full_app_name)}"
#  },
#  {
#    source: "unicorn_init.sh",
#    link: "/etc/init.d/unicorn_#{fetch(:full_app_name)}"
#  },
#  {
#    source: "log_rotation",
#   link: "/etc/logrotate.d/#{fetch(:full_app_name)}"
#  },
#  {
#    source: "monit",
#    link: "/etc/monit/conf.d/#{fetch(:full_app_name)}.conf"
#  }
#])

# Note: This needs to be set even if you don't have any file.Without this
# variable in place capistrano/tasks/setup_config.cap breaks with error
# undefined method `each' for nil:NilClass @ line number 28
set(:symlinks, [])

namespace :deploy do
  # make sure we're deploying what we think we're deploying
  before :deploy, "deploy:check_revision"

  after :finishing, 'deploy:cleanup'

  # As of Capistrano 3.1, the `deploy:restart` task is not called
  # automatically.
  after 'deploy:publishing', 'deploy:restart'
end

# ========= DEFAULT GENERATED BY CAPISTRANO
# Default branch is :master
# ask :branch, proc { `git rev-parse --abbrev-ref HEAD`.chomp }.call

# Default deploy_to directory is /var/www/my_app_name
# set :deploy_to, '/var/www/my_app_name'

# Default value for :scm is :git
# set :scm, :git

# Default value for :format is :pretty
# set :format, :pretty

# Default value for :log_level is :debug
# set :log_level, :debug

# Default value for :pty is false
# set :pty, true

# Default value for :linked_files is []
# set :linked_files, fetch(:linked_files, []).push('config/database.yml')

# Default value for linked_dirs is []
# set :linked_dirs, fetch(:linked_dirs, []).push('bin', 'log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')

# Default value for default_env is {}
# set :default_env, { path: "/opt/ruby/bin:$PATH" }

# Default value for keep_releases is 5
# set :keep_releases, 5

#namespace :deploy do
#
#  after :restart, :clear_cache do
#    on roles(:web), in: :groups, limit: 3, wait: 10 do
#      # Here we can do anything such as:
#      # within release_path do
#      #   execute :rake, 'cache:clear'
#      # end
#    end
#  end
#
#end
